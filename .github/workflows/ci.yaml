name: Flutter CI

on:
  push:
    branches: [main]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v4
        with:
          name: gitversion
          path: version.txt

  build:
    name: Build APK and Create release
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get version.txt
        uses: actions/download-artifact@v4
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version and export to env
        id: version
        run: |
          VERSION=$(cat version1.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update version in YAML
        run: sed -i 's/1.2.4+1/${{ env.VERSION }}+${{ github.run_number }}/g' pubspec.yaml

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: gradle

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.22.1'
          channel: "stable"
          cache: true

      - run: flutter clean
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi
      - run: flutter build appbundle --release

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ env.VERSION }}
          commit: ${{ github.sha }}

      - name: Upload app bundle
        uses: actions/upload-artifact@v4
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  release:
    name: Release app to production track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v4
        with:
          name: appbundle

      - name: Release app to Production track
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.negatevents.negat
          releaseFiles: app-release.aab
          track: production
          status: completed
